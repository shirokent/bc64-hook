import { useFormik } from "formik";
import React from "react";
// import yup th·ªß c√¥ng
import * as yup from "yup";

const DemoHookFormik = () => {
  const formRegister = useFormik({
    initialValues: {
      fullName: "",
      phone: "",
      pass: "",
      email: "",
    },
    onSubmit: (value) => {
      console.log("üò¢ ~ value", value);
      // form => g·ª≠i BE
      // Ch·ªâ c·∫ßn 1 tr∆∞·ªùng c√≥ l·ªói, s·∫Ω ko g·ª≠i l√™n BE ƒë∆∞·ª£c
    },
    validationSchema: yup.object().shape({
      fullName: yup
        .string()
        .required("Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")
        .min(6, "T√™n ph·∫£i nhi·ªÅu h∆°n 6 k√Ω t·ª±")
        .max(10, "t√™n ph·∫£i √≠t h∆°n 10 k√Ω t·ª±"),
      // matches l√† m·ªôt validation ch·ª©a chu·ªói regex theo nh∆∞ nh·ªØng b√†i tr∆∞·ªõc ƒë√£ h·ªçc, l√† tr∆∞·ªùng h·ª£p t·ªïng h·ª£p nh·∫•t cho c√°c vali kh√°c trong th∆∞ vi·ªán
      // matches(/n∆°i ch·ª©a chu·ªëi regex/, 'n·ªôi dung c·∫ßn th√¥ng b√°o khi nh·∫≠p sai')
      email: yup
        .string()
        .required("Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")
        .email("Email kh√¥ng h·ª£p l·ªá")
        .matches(/^[a-zA-Z0-9._%+-]+@gmail\.com$/, "Email ch∆∞a h·ª£p l·ªá"),
      phone: yup.number().typeError("Gi√° tr·ªã ph·∫£i l√† m·ªôt s·ªë"),
    }),
  });
  return (
    <div className="container m-auto">
      <form
        onSubmit={formRegister.handleSubmit}
        action=""
        className="border rounded p-3 space-y-4"
      >
        <h3 className="text-3xl font-bold">Form Register</h3>
        {/* T√™n */}
        <div>
          <label htmlFor="" className="w-full text-xl block">
            Nh·∫≠p t√™n
          </label>
          <input
            className="w-1/2 border rounded-lg p-2"
            type="text"
            name="fullName"
            id="fullName"
            onChange={formRegister.handleChange}
          />
          <p className="text-red-600">{formRegister.errors.fullName}</p>
        </div>
        {/* phone */}
        <div>
          <label htmlFor="" className="w-full text-xl block">
            Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i
          </label>
          <input
            className="w-1/2 border rounded-lg p-2"
            type="text"
            name="phone"
            id="phone"
            onChange={formRegister.handleChange}
          />
          <p className="text-red-600">{formRegister.errors.phone}</p>
        </div>
        {/* pass */}
        <div>
          <label htmlFor="" className="w-full text-xl block">
            Nh·∫≠p s·ªë pass
          </label>
          <input
            className="w-1/2 border rounded-lg p-2"
            type="text"
            name="pass"
            id="pass"
            onChange={formRegister.handleChange}
          />
          <p className="text-red-600">{formRegister.errors.pass}</p>
        </div>
        {/* email */}
        <div>
          <label htmlFor="" className="w-full text-xl block">
            Nh·∫≠p email
          </label>
          <input
            className="w-1/2 border rounded-lg p-2"
            type="text"
            name="email"
            id="email"
            onChange={formRegister.handleChange}
          />
          <p className="text-red-600">{formRegister.errors.email}</p>
        </div>
        {/* button */}
        <div>
          <button
            type="submit"
            className="bg-green-600 text-white rounded-lg p-2"
          >
            Register
          </button>
        </div>
      </form>
    </div>
  );
};

export default DemoHookFormik;
